/* CSS Variables for easier theming */
:root {
    --primary-bot-color: #ffcc00;
    --secondary-bot-color: #ffa500;
    --body-bg-top: #a7e0ff;
    --body-bg-bottom: #e6f7ff;
    --microphone-btn-bg: #4682B4;
    --microphone-btn-active: #dc3545;
    --voice-bar-bg: #87CEEB;
    --status-bubble-bg: #fff;
    --text-color: #333;
    --mouth-color: #555;
    --talking-mouth-color: #6495ED;
    --thinking-mouth-color: #777;
    --listening-eye-color: #1E90FF;
    --cheek-color: #ff99aa;
}

/* Basic Styles */
body {
    font-family: 'Comic Sans MS', cursive, sans-serif;
    background: linear-gradient(to bottom, var(--body-bg-top), var(--body-bg-bottom)); /* Gradient with depth */
    background-attachment: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    overflow: hidden;
    flex-direction: column;
    position: relative; /* For floating elements like thought bubbles */
    z-index: 0; /* Ensure body is at base level for clouds */
}

/* Background Clouds */
.cloud {
    position: absolute;
    background: rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    box-shadow: 0 0 15px rgba(255, 255, 255, 0.4);
    animation: moveClouds linear infinite;
    z-index: -1; /* Behind everything */
    opacity: 0.8;
}
.cloud:nth-child(1) { width: 150px; height: 80px; top: 10%; left: -20%; animation-duration: 40s; animation-delay: 0s; }
.cloud:nth-child(2) { width: 200px; height: 100px; top: 25%; left: -30%; animation-duration: 50s; animation-delay: 10s; }
.cloud:nth-child(3) { width: 100px; height: 60px; top: 5%; right: -15%; animation-duration: 35s; animation-delay: 5s; }
.cloud:nth-child(4) { width: 180px; height: 90px; top: 40%; right: -25%; animation-duration: 45s; animation-delay: 15s; }
@keyframes moveClouds {
    0% { transform: translateX(0%); }
    100% { transform: translateX(calc(100vw + 300px)); } /* Move across viewport plus cloud width */
}

/* Robot Face Container */
.robot-face-container {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    padding-bottom: 20px;
}

.robot-face {
    width: 300px;
    height: 300px;
    background-color: var(--primary-bot-color);
    border-radius: 50%;
    border: 10px solid var(--secondary-bot-color);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3), inset 0 7px 15px rgba(255, 255, 255, 0.5);
    transition: transform 0.3s ease;
}

/* Robot Antennas */
.robot-face::before,
.robot-face::after {
    content: '';
    position: absolute;
    top: -35px;
    width: 25px;
    height: 70px;
    background-color: var(--primary-bot-color);
    border: 6px solid var(--secondary-bot-color);
    border-radius: 8px 8px 0 0;
    z-index: -1;
    transition: transform 0.3s ease;
}

.robot-face::before {
    left: 60px;
    transform: rotate(-15deg);
}

.robot-face::after {
    right: 60px;
    transform: rotate(15deg);
}

.robot-face.idle-wiggle .robot-face::before {
    transform: rotate(-20deg);
}

.robot-face.idle-wiggle .robot-face::after {
    transform: rotate(20deg);
}

/* Antenna Twitch (for listening/talking) */
.robot-face.active-twitch::before {
    animation: antennaTwitchLeft 0.2s infinite alternate;
}
.robot-face.active-twitch::after {
    animation: antennaTwitchRight 0.2s infinite alternate;
}
@keyframes antennaTwitchLeft {
    from { transform: rotate(-15deg); }
    to { transform: rotate(-18deg); }
}
@keyframes antennaTwitchRight {
    from { transform: rotate(15deg); }
    to { transform: rotate(18deg); }
}


/* Robot Cheeks */
.robot-cheek {
    position: absolute;
    bottom: 80px;
    width: 40px;
    height: 40px;
    background-color: var(--cheek-color);
    border-radius: 50%;
    opacity: 0.7;
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1) inset;
}

.robot-cheek.left-cheek {
    left: 50px;
}

.robot-cheek.right-cheek {
    right: 50px;
}


.robot-eye {
    width: 60px;
    height: 60px;
    top: 80px;
    background-color: var(--text-color); /* Eye casing color */
    border-radius: 50%;
    position: absolute;
    overflow: hidden;
    transition: background-color 0.3s ease, width 0.2s, height 0.2s, transform 0.2s;
}

.robot-eye.left { left: 70px; }
.robot-eye.right { right: 70px; }

/* Pupil within eye */
.robot-eye::after {
    content: '';
    position: absolute;
    width: 50%; /* Pupil size relative to eye */
    height: 50%; /* Pupil size relative to eye */
    background-color: var(--primary-bot-color); /* Pupil color, matches face */
    border-radius: 50%;
    top: 25%;
    left: 25%;
    transform-origin: center center;
    animation: blink 4s infinite;
}

/* New: Eye pupil following mouse (on body) */
.robot-eye.left .robot-eye::after { transform: translate(var(--pupil-x-left, 0px), var(--pupil-y, 0px)); }
.robot-eye.right .robot-eye::after { transform: translate(var(--pupil-x-right, 0px), var(--pupil-y, 0px)); }

/* New: Listening eye animation */
.robot-eye.listening {
    background-color: var(--listening-eye-color);
    box-shadow: 0 0 10px rgba(30, 144, 255, 0.7);
}
.robot-eye.listening::after {
    animation: none; /* Disable blinking when listening */
    transform: scale(0.8) translate(var(--pupil-x-left, 0px), var(--pupil-y, 0px)); /* Pupils slightly shrink/focus */
}

@keyframes blink {
    0%, 50%, 52%, 100% { transform: scaleY(0); }
    51% { transform: scaleY(1); }
}

/* New: Happy/Squint eye animation */
.robot-eye.happy::after {
    animation: none; /* Disable blinking */
    transform: scaleY(0.4) translateY(35px); /* Adjusted squint effect for larger eye */
    border-radius: 0 0 50% 50%;
    background-color: var(--text-color); /* Make it black again to look like squinted line */
}

/* New: Confused eyes (example, needs JS trigger) */
.robot-eye.confused::after {
    animation: none;
    width: 40%;
    height: 40%;
    border-radius: 50%;
    background-color: var(--primary-bot-color);
    top: 30%;
    left: 30%;
    transform: rotate(45deg); /* Slight cross-eyed look */
}


.robot-mouth {
    width: 120px;
    height: 40px;
    bottom: 60px;
    background-color: var(--mouth-color);
    border-radius: 0 0 30px 30px;
    position: absolute;
    transform-origin: center top;
    animation: mouthMove 0.3s infinite alternate paused;
    box-shadow: inset 0 5px 8px rgba(0, 0, 0, 0.3);
    transition: background-color 0.3s ease;
}

.robot-mouth.talking {
    animation-play-state: running;
    background-color: var(--talking-mouth-color);
}
/* New: Thinking mouth animation */
.robot-mouth.thinking {
    animation: thinkingMouth 0.8s infinite alternate;
    background-color: var(--thinking-mouth-color);
}

@keyframes mouthMove {
    0% { transform: scaleY(1); }
    50% { transform: scaleY(0.7); }
    100% { transform: scaleY(1); }
}

@keyframes thinkingMouth {
    0% { transform: scaleY(1); background-color: var(--thinking-mouth-color); }
    50% { transform: scaleY(0.5); background-color: #999; }
    100% { transform: scaleY(1); background-color: var(--thinking-mouth-color); }
}

/* New: Body Sway Animation for Thinking */
.robot-face.swaying {
    animation: sway 1s infinite alternate ease-in-out;
}

/* New: Body Bounce for Talking */
.robot-face.bouncing {
    animation: bounce 0.3s infinite alternate ease-in-out;
}

@keyframes sway {
    0% { transform: rotate(0deg); }
    50% { transform: rotate(3deg); }
    100% { transform: rotate(0deg); }
}
@keyframes bounce {
    0% { transform: translateY(0px); }
    100% { transform: translateY(-5px); } /* Slight up bounce */
}

/* Voice Input Bar */
.voice-input-bar {
    background-color: var(--voice-bar-bg);
    width: 100%;
    height: 150px;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.2);
    position: relative;
    border-radius: 30px 30px 0 0;
    padding-top: 20px;
    box-sizing: border-box;
    z-index: 10; /* Ensure it's above clouds */
    flex-shrink: 0; /* Prevent it from shrinking */
}

#microphone-btn {
    background-color: var(--microphone-btn-bg);
    color: white;
    border: none;
    border-radius: 50%;
    width: 90px;
    height: 90px;
    font-size: 3.5em;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.1s ease, box-shadow 0.1s ease;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
    z-index: 1;
    position: relative; /* For audio wave */
    overflow: hidden; /* Hide overflowing wave */
}

#microphone-btn:hover {
    background-color: color-mix(in srgb, var(--microphone-btn-bg), black 10%); /* Slightly darker on hover */
    transform: scale(1.05);
}

#microphone-btn:active {
    transform: scale(0.95);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3) inset;
}

#microphone-btn.listening {
    background-color: var(--microphone-btn-active);
    animation: pulse 1s infinite alternate;
}

@keyframes pulse {
    from { transform: scale(1); box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7); }
    to { transform: scale(1.1); box-shadow: 0 0 0 10px rgba(220, 53, 69, 0); }
}

/* Audio Wave Visualization */
.audio-wave {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 0;
    height: 0;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.4);
    animation: waveExpand 0.5s infinite alternate;
    opacity: 0;
    z-index: -1;
}
#microphone-btn.active-wave .audio-wave {
    opacity: 1;
    animation-play-state: running;
}
@keyframes waveExpand {
    from { width: 0; height: 0; opacity: 0.8; }
    to { width: 90px; height: 90px; opacity: 0; }
}


/* Status Bubble */
.status-bubble {
    position: absolute;
    top: -60px;
    background-color: var(--status-bubble-bg);
    padding: 12px 20px;
    border-radius: 25px;
    box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    z-index: 10;
    text-align: center;
    min-width: 180px;
    transition: all 0.3s ease;
    display: flex;
    justify-content: center;
    align-items: center;
}

.status-bubble::after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    width: 25px;
    height: 25px;
    background-color: var(--status-bubble-bg);
    border-bottom-right-radius: 5px;
    box-shadow: 3px 3px 8px rgba(0,0,0,0.15);
    z-index: -1;
}

.status-text {
    position: static;
    color: var(--text-color);
    font-size: 1.1em;
    font-weight: bold;
    /* aria-live: polite; (Removed, will be handled by JS for better control) */
}
/* Typing indicator dots for status text */
.status-text.typing span {
    animation: blinkDot 1s infinite steps(1, start);
    opacity: 0;
}
.status-text.typing span:nth-child(1) { animation-delay: 0s; }
.status-text.typing span:nth-child(2) { animation-delay: 0.3s; }
.status-text.typing span:nth-child(3) { animation-delay: 0.6s; }
@keyframes blinkDot {
    0%, 49% { opacity: 0; }
    50%, 100% { opacity: 1; }
}


/* Thought Bubble for Thinking State */
.thought-bubble {
    position: absolute;
    top: 20px; /* Adjust relative to robot face */
    right: -30px; /* Adjust relative to robot face */
    width: 80px;
    height: 80px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 50%;
    box-shadow: 0 3px 10px rgba(0,0,0,0.2);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2.5em;
    color: var(--mouth-color);
    z-index: 1;
    opacity: 0; /* Hidden by default */
    transform: scale(0.5); /* Start small */
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.thought-bubble.active {
    opacity: 1;
    transform: scale(1);
    animation: popInBubble 0.3s ease-out forwards;
}

@keyframes popInBubble {
    0% { transform: scale(0.5); opacity: 0; }
    80% { transform: scale(1.1); opacity: 1; }
    100% { transform: scale(1); }
}

/* Smaller bubbles for thought trail */
.thought-bubble::before,
.thought-bubble::after {
    content: '';
    position: absolute;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 50%;
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
}

.thought-bubble::before {
    width: 30px;
    height: 30px;
    bottom: -10px;
    left: 10px;
    transform: translateX(-50%);
}

.thought-bubble::after {
    width: 15px;
    height: 15px;
    bottom: -20px;
    left: 0px;
    transform: translateX(-50%);
}

/* Responsive adjustments */
@media (max-width: 600px) {
    .robot-face {
        width: 250px;
        height: 250px;
        border: 8px solid var(--secondary-bot-color);
    }
    .robot-face::before, .robot-face::after {
        top: -30px;
        width: 20px;
        height: 60px;
        left: 50px;
        right: 50px;
    }
    .robot-eye {
        width: 50px;
        height: 50px;
        top: 65px;
        left: 60px;
        right: 60px;
    }
    .robot-cheek {
        bottom: 70px;
        width: 35px;
        height: 35px;
        left: 40px;
        right: 40px;
    }
    .robot-mouth {
        width: 100px;
        height: 35px;
        bottom: 50px;
    }
    #microphone-btn {
        width: 75px;
        height: 75px;
        font-size: 3em;
    }
    .voice-input-bar {
        height: 130px;
    }
    .status-bubble {
        padding: 10px 15px;
        font-size: 0.9em;
        min-width: 150px;
        top: -50px;
    }
    .thought-bubble {
        width: 60px;
        height: 60px;
        font-size: 1.8em;
        right: -20px;
    }
    .thought-bubble::before {
        width: 20px;
        height: 20px;
    }
    .thought-bubble::after {
        width: 10px;
        height: 10px;
    }
}